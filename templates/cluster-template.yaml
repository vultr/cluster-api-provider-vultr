---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: "${CLUSTER_NAME}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  infrastructureRef:
    apiVersion: infra.cluster.x-k8s.io/v1
    kind: VultrCluster
    name: "${CLUSTER_NAME}"
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: "${CLUSTER_NAME}-control-plane"
---
apiVersion: infra.cluster.x-k8s.io/v1
kind: VultrCluster
metadata:
  name: "${CLUSTER_NAME}"
spec:
  controlPlaneEndpoint:
    host: 149.28.51.199
    port: 6443
  region: ${VULTR_REGION}
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  machineTemplate:
    infrastructureRef:
      kind: VultrMachineTemplate
      apiVersion: infra.cluster.x-k8s.io/v1
      name: "${CLUSTER_NAME}-control-plane"
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: vultr://'{{ ds.meta_data["instance_id"] }}'
        name: '{{ ds.meta_data["local_hostname"] }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
        name: '{{ ds.meta_data["local_hostname"] }}'
  version: "${KUBERNETES_VERSION}"
---
apiVersion: infra.cluster.x-k8s.io/v1
kind: VultrMachineTemplate
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  template:
    spec:
      credentialsRef:
        name: my-vultr-credentials
        namespace: default
      planID: "${VULTR_CONTROL_PLANE_MACHINE_PLAN_TYPE}"
      osID: ${VULTR_CONTROL_PLANE_OS}
      region: ${VULTR_REGION}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  clusterName: "${CLUSTER_NAME}"
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "${CLUSTER_NAME}"
      version: "${KUBERNETES_VERSION}"
      bootstrap:
        configRef:
          name: "${CLUSTER_NAME}-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "${CLUSTER_NAME}-md-0"
        apiVersion: infra.cluster.x-k8s.io/v1
        kind: VultrMachineTemplate
---
apiVersion: infra.cluster.x-k8s.io/v1
kind: VultrMachineTemplate
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  template:
    spec:
      credentialsRef:
        name: my-vultr-credentials
        namespace: default
      planID: "${VULTR_NODE_MACHINE_PLAN_TYPE}"
      osID: ${VULTR_NODE_MACHINE_OS}
      region: ${VULTR_REGION}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: '{{ ds.meta_data.local_hostname }}'
          kubeletExtraArgs:
            cloud-provider: external























# ---
# apiVersion: cluster.x-k8s.io/v1beta1
# kind: Cluster
# metadata:
#   name: vke-capi-test
#   namespace: default
# spec:
#   clusterNetwork:
#     pods:
#       cidrBlocks:
#       - 10.244.0.0/16
#   infrastructureRef:
#     apiVersion: infra.cluster.x-k8s.io/v1
#     kind: VultrCluster
#     name: vke-capi-test
#   controlPlaneRef:
#     kind: KubeadmControlPlane
#     apiVersion: controlplane.cluster.x-k8s.io/v1beta1
#     name: "capv-control-plane"


# ---
# apiVersion: infra.cluster.x-k8s.io/v1
# kind: VultrCluster
# metadata:
#   name: vke-capi-test
#   namespace: default
# spec:
#   controlPlaneEndpoint:
#     host: 149.28.51.199
#     port: 6443
#   region: "ewr"

# ---
# kind: KubeadmControlPlane
# apiVersion: controlplane.cluster.x-k8s.io/v1beta1
# metadata:
#   name: "capv-quickstart-control-plane"
#   namespace: default
# spec:
#   replicas: 3
#   machineTemplate:
#     infrastructureRef:
#       kind: VultrMachineTemplate
#       apiVersion: infra.cluster.x-k8s.io/v1
#       name: "capv-quickstart-control-plane"
#   kubeadmConfigSpec:
#     initConfiguration:
#       nodeRegistration:
#         kubeletExtraArgs:
#           cloud-provider: external
#           provider-id: vultr://'{{ ds.meta_data["instance_id"] }}'
#         name: '{{ ds.meta_data["local_hostname"] }}'
#     joinConfiguration:
#       nodeRegistration:
#         kubeletExtraArgs:
#           cloud-provider: external
#         name: '{{ ds.meta_data["local_hostname"] }}'
#   version: "1.30.0"

# ---
# apiVersion: cluster.x-k8s.io/v1beta1
# kind: MachineDeployment
# metadata:
#   name: "capv-quickstart-md-0"
# spec:
#   clusterName: "capv-quickstart"
#   replicas: 2
#   selector:
#     matchLabels:
#   template:
#     spec:
#       clusterName: "capv-quickstart"
#       version: "1.30.0"
#       bootstrap:
#         configRef:
#           name: "capv-quickstart-md-0"
#           apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
#           kind: KubeadmConfigTemplate
#       infrastructureRef:
#         name: "capv-quickstart-md-0"
#         apiVersion: infra.cluster.x-k8s.io/v1
#         kind: VultrMachineTemplate

# ---
# apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
# kind: KubeadmConfigTemplate
# metadata:
#   name: "capv-quickstart-md-0"
# spec:
#   template:
#     spec:
#       joinConfiguration:
#         nodeRegistration:
#           name: '{{ ds.meta_data.local_hostname }}'
#           kubeletExtraArgs:
#             cloud-provider: external